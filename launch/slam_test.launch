<launch>

  <!-- 
  possible types of SLAM:
  gmapping        - launch file for gmapping 
  hector_slam     - launch file for hector_slam
  rtabmap         - launch file for rtabmap
  rtabmap_broken  - launch file for broken mapping with rtabmap
  octomap_mapping - launch file for octomap_mapping
  -->

  <param name="/use_sim_time" value="true"/>

  <arg name="SLAM_type"   default="gmapping"/>
  <arg name="bag_file"    default="new_mini_room"/>
  <arg name="scanner1"    default="/point2_front"/>
  <arg name="scanner2"    default="/point2_rear"/>
  <arg name="inter_rviz"  default="true"/>
  <arg name="rviz_config" default="basic"/>

  <node name="common_pcl2" pkg="concatenate_pcl2" type="concatenate_pcl2" output="screen">
    <param name="theta"    value="-M_PI"/>
    <param name="x_offset" value="-1.15"/>
    <param name="y_offset" value="-0.30"/>

    <param name="cloud1"    value="$(arg scanner1)"/>
    <param name="cloud2"    value="$(arg scanner2)"/>
    <param name="cloud_out" value="/points2_out"/>
  </node>

  <node name="rosbag" pkg="rosbag" type="play" output="log" args="--clock  $(find slam_benchmark)/bag/$(arg bag_file).bag" />

  <!-- run pointcloud_to_laserscan node -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan1">
      <remap from="cloud_in" to="/points2_out"/>
      <remap from="scan"     to="/points2_out/scan"/>
      <rosparam>
          target_frame: lidar_front # Leave disabled to output scan in pointcloud frame
          transform_tolerance: 0.01
          min_height: 0.0
          max_height: 0.5
          angle_min: -3.14 # M_PI
          angle_max:  3.14 # M_PI
          angle_increment: 0.0043 # M_PI/720.0
          scan_time: 0.06666
          range_min: 0.20
          range_max: 50.0
          use_inf: false
          inf_epsilon: 1.0
          # Concurrency level, affects number of pointclouds queued for processing and number of threads used
          # 0 : Detect number of cores
          # 1 : Single threaded
          # 2->inf : Parallelism level
          concurrency_level: 1
      </rosparam>
  </node>

  <group if="$(arg inter_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find slam_benchmark)/rviz/$(arg rviz_config).rviz" />
  </group>

  <!-- some simple setting with gmapping -->
  <group if="$(eval SLAM_type == 'gmapping')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
          <arg name="odom"                     value="odom"/>
          <arg name="transform_publish_period" value="0.5"/>
      </include>
  </group>

  <group if="$(eval SLAM_type == 'hector_slam')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
      </include>
  </group>

  <!-- here rtabmap tune for imu and laser info. Don't use with map, odom frames -->
  <group if="$(eval SLAM_type == 'rtabmap')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
      </include>
  </group>

  <!-- here rtabmap tune for mapping. Use only for mapping. Tracking only map and base_footprint frame. All estimate feature is disabled -->
  <group if="$(eval SLAM_type == 'rtabmap_broken')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
      </include>
  </group>

  <group if="$(eval SLAM_type == 'amcl')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
        <arg name="map_file" default="maps_combine.yaml"/>
      </include>
  </group>

  <group if="$(eval SLAM_type == 'als')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
        <arg name="map_file" default="maps_combine.yaml"/>
      </include>
  </group>

  <!-- 3d mapping -->
  <group if="$(eval SLAM_type == 'octomap_mapping')">
      <include file="$(find slam_benchmark)/launch/$(arg SLAM_type).launch">
      </include>
  </group>

</launch>